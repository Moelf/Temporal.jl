{
    "docs": [
        {
            "location": "/", 
            "text": "Temporal.jl Documentation\n\n\n\n\nTopics\n\n\n\n\nConstruction\n\n\nBasic\n\n\nArithmetic\n\n\nLogical\n\n\nNumerical Indexing\n\n\nInteger\n\n\nBoolean\n\n\nArrays \n Ranges\n\n\n\n\n\n\nSymbol Indexing\n\n\nString Indexing\n\n\nJoins\n\n\nOuter Joins\n\n\nInner Joins\n\n\nLeft Joins\n\n\nRight Joins\n\n\n\n\n\n\nTemporal Aggregation\n\n\nTime Period Sampling Methods\n\n\nCollapsing \n Summarizing\n\n\n\n\n\n\nData Readers\n\n\nGoogle\n\n\nYahoo\n\n\nQuandl\n\n\nFlat Files\n\n\n\n\n\n\nPackage Options\n\n\nRange Delimiter\n\n\nName Sanitization", 
            "title": "Home"
        }, 
        {
            "location": "/#temporaljl-documentation", 
            "text": "", 
            "title": "Temporal.jl Documentation"
        }, 
        {
            "location": "/#topics", 
            "text": "Construction  Basic  Arithmetic  Logical  Numerical Indexing  Integer  Boolean  Arrays   Ranges    Symbol Indexing  String Indexing  Joins  Outer Joins  Inner Joins  Left Joins  Right Joins    Temporal Aggregation  Time Period Sampling Methods  Collapsing   Summarizing    Data Readers  Google  Yahoo  Quandl  Flat Files    Package Options  Range Delimiter  Name Sanitization", 
            "title": "Topics"
        }, 
        {
            "location": "/ts/", 
            "text": "Construction\n\n\n\n\nTemporal.TS\n\n\n\n\n#\n\n\nTemporal.TS\n \n \nType\n.\n\n\nTime series type aimed at efficiency and simplicity.\n\n\nMotivated by the \nxts\n package in R and the \npandas\n package in Python.\n\n\nsource", 
            "title": "TS"
        }, 
        {
            "location": "/ts/#construction", 
            "text": "Temporal.TS   #  Temporal.TS     Type .  Time series type aimed at efficiency and simplicity.  Motivated by the  xts  package in R and the  pandas  package in Python.  source", 
            "title": "Construction"
        }, 
        {
            "location": "/operations/", 
            "text": "Basic\n\n\n\n\nArithmetic\n\n\n\n\nLogical", 
            "title": "Operations"
        }, 
        {
            "location": "/operations/#basic", 
            "text": "", 
            "title": "Basic"
        }, 
        {
            "location": "/operations/#arithmetic", 
            "text": "", 
            "title": "Arithmetic"
        }, 
        {
            "location": "/operations/#logical", 
            "text": "", 
            "title": "Logical"
        }, 
        {
            "location": "/indexing/", 
            "text": "Numerical Indexing\n\n\n\n\nInteger\n\n\n\n\nBoolean\n\n\n\n\nArrays \n Ranges\n\n\n\n\nSymbol Indexing\n\n\n\n\nString Indexing", 
            "title": "Indexing"
        }, 
        {
            "location": "/indexing/#numerical-indexing", 
            "text": "", 
            "title": "Numerical Indexing"
        }, 
        {
            "location": "/indexing/#integer", 
            "text": "", 
            "title": "Integer"
        }, 
        {
            "location": "/indexing/#boolean", 
            "text": "", 
            "title": "Boolean"
        }, 
        {
            "location": "/indexing/#arrays-ranges", 
            "text": "", 
            "title": "Arrays &amp; Ranges"
        }, 
        {
            "location": "/indexing/#symbol-indexing", 
            "text": "", 
            "title": "Symbol Indexing"
        }, 
        {
            "location": "/indexing/#string-indexing", 
            "text": "", 
            "title": "String Indexing"
        }, 
        {
            "location": "/combining/", 
            "text": "Temporal.TS\n\n\n\n\n\n\nJoins\n\n\n\n\nOuter Joins\n\n\nOne can perform a full outer join on the time \nindex\nes of two \nTS\n objects $x$ and $y$ in the following ways:\n\n\n\n\nmerge(x, y)\n\n\nojoin(x, y)\n\n\n[x y]\n\n\nhcat(x, y)\n\n\n\n\nWhere there are dates in the \nindex\n of one that do not exist in the other, values will be filled with \nNaN\n objects. As the \nmissing\n functionality matures in Julia's base syntax, it will eventually replace \nNaN\n in this context, since unfortunately \nNaN\n is only applicable for \nFloat64\n element types.\n\n\njulia\n using Temporal, Base.Dates\n\njulia\n x = TS(rand(252))\nIndex       A\n2017-07-12  0.9287\n2017-07-13  0.3708\n2017-07-14  0.0474\n2017-07-15  0.0417\n2017-07-16  0.603\n2017-07-17  0.0463\n2017-07-18  0.2472\n2017-07-19  0.1188\n2017-07-20  0.6255\n\u22ee\n2018-03-11  0.771\n2018-03-12  0.0868\n2018-03-13  0.3879\n2018-03-14  0.3036\n2018-03-15  0.6091\n2018-03-16  0.0645\n2018-03-17  0.4683\n2018-03-18  0.5487\n2018-03-19  0.6579\n2018-03-20  0.0595\n\njulia\n y = TS(rand(252), x.index .- Month(6))\nIndex       A\n2017-01-12  0.9864\n2017-01-13  0.3383\n2017-01-14  0.3465\n2017-01-15  0.7202\n2017-01-16  0.9183\n2017-01-17  0.9997\n2017-01-18  0.9054\n2017-01-19  0.9681\n2017-01-20  0.7129\n\u22ee\n2017-09-11  0.036\n2017-09-12  0.5861\n2017-09-13  0.9769\n2017-09-14  0.3656\n2017-09-15  0.5132\n2017-09-16  0.6934\n2017-09-17  0.5816\n2017-09-18  0.7637\n2017-09-19  0.5586\n2017-09-20  0.0021\n\njulia\n [x y]\nIndex       A       A\n2017-01-12  NaN     0.9864\n2017-01-13  NaN     0.3383\n2017-01-14  NaN     0.3465\n2017-01-15  NaN     0.7202\n2017-01-16  NaN     0.9183\n2017-01-17  NaN     0.9997\n2017-01-18  NaN     0.9054\n2017-01-19  NaN     0.9681\n2017-01-20  NaN     0.7129\n\u22ee\n2018-03-11  0.771   NaN\n2018-03-12  0.0868  NaN\n2018-03-13  0.3879  NaN\n2018-03-14  0.3036  NaN\n2018-03-15  0.6091  NaN\n2018-03-16  0.0645  NaN\n2018-03-17  0.4683  NaN\n2018-03-18  0.5487  NaN\n2018-03-19  0.6579  NaN\n2018-03-20  0.0595  NaN\n\n\n\n\n\n\nInner Joins\n\n\n\n\nLeft Joins\n\n\n\n\nRight Joins", 
            "title": "Combining"
        }, 
        {
            "location": "/combining/#joins", 
            "text": "", 
            "title": "Joins"
        }, 
        {
            "location": "/combining/#outer-joins", 
            "text": "One can perform a full outer join on the time  index es of two  TS  objects $x$ and $y$ in the following ways:   merge(x, y)  ojoin(x, y)  [x y]  hcat(x, y)   Where there are dates in the  index  of one that do not exist in the other, values will be filled with  NaN  objects. As the  missing  functionality matures in Julia's base syntax, it will eventually replace  NaN  in this context, since unfortunately  NaN  is only applicable for  Float64  element types.  julia  using Temporal, Base.Dates\n\njulia  x = TS(rand(252))\nIndex       A\n2017-07-12  0.9287\n2017-07-13  0.3708\n2017-07-14  0.0474\n2017-07-15  0.0417\n2017-07-16  0.603\n2017-07-17  0.0463\n2017-07-18  0.2472\n2017-07-19  0.1188\n2017-07-20  0.6255\n\u22ee\n2018-03-11  0.771\n2018-03-12  0.0868\n2018-03-13  0.3879\n2018-03-14  0.3036\n2018-03-15  0.6091\n2018-03-16  0.0645\n2018-03-17  0.4683\n2018-03-18  0.5487\n2018-03-19  0.6579\n2018-03-20  0.0595\n\njulia  y = TS(rand(252), x.index .- Month(6))\nIndex       A\n2017-01-12  0.9864\n2017-01-13  0.3383\n2017-01-14  0.3465\n2017-01-15  0.7202\n2017-01-16  0.9183\n2017-01-17  0.9997\n2017-01-18  0.9054\n2017-01-19  0.9681\n2017-01-20  0.7129\n\u22ee\n2017-09-11  0.036\n2017-09-12  0.5861\n2017-09-13  0.9769\n2017-09-14  0.3656\n2017-09-15  0.5132\n2017-09-16  0.6934\n2017-09-17  0.5816\n2017-09-18  0.7637\n2017-09-19  0.5586\n2017-09-20  0.0021\n\njulia  [x y]\nIndex       A       A\n2017-01-12  NaN     0.9864\n2017-01-13  NaN     0.3383\n2017-01-14  NaN     0.3465\n2017-01-15  NaN     0.7202\n2017-01-16  NaN     0.9183\n2017-01-17  NaN     0.9997\n2017-01-18  NaN     0.9054\n2017-01-19  NaN     0.9681\n2017-01-20  NaN     0.7129\n\u22ee\n2018-03-11  0.771   NaN\n2018-03-12  0.0868  NaN\n2018-03-13  0.3879  NaN\n2018-03-14  0.3036  NaN\n2018-03-15  0.6091  NaN\n2018-03-16  0.0645  NaN\n2018-03-17  0.4683  NaN\n2018-03-18  0.5487  NaN\n2018-03-19  0.6579  NaN\n2018-03-20  0.0595  NaN", 
            "title": "Outer Joins"
        }, 
        {
            "location": "/combining/#inner-joins", 
            "text": "", 
            "title": "Inner Joins"
        }, 
        {
            "location": "/combining/#left-joins", 
            "text": "", 
            "title": "Left Joins"
        }, 
        {
            "location": "/combining/#right-joins", 
            "text": "", 
            "title": "Right Joins"
        }, 
        {
            "location": "/aggregation/", 
            "text": "Temporal Aggregation\n\n\n\n\nTime Period Sampling Methods\n\n\nSummarize by day of the week:\n\n\n\n\nmondays\n\n\ntuesdays\n\n\nwednesdays\n\n\nthursdays\n\n\nfridays\n\n\nsaturdays\n\n\nsundays\n\n\n\n\nSummarize by beginnings and endings of weeks, months, quarters, or years:\n\n\n\n\nbow\n\n\neow\n\n\nbom\n\n\neom\n\n\nboq\n\n\neoq\n\n\nboy\n\n\neoy\n\n\nbow\n\n\neow\n\n\nbom\n\n\neom\n\n\nboq\n\n\neoq\n\n\nboy\n\n\neoy\n\n\n\n\n\n\nCollapsing \n Summarizing\n\n\n\n\ncollapse\n\n\napply", 
            "title": "Aggregation"
        }, 
        {
            "location": "/aggregation/#temporal-aggregation", 
            "text": "", 
            "title": "Temporal Aggregation"
        }, 
        {
            "location": "/aggregation/#time-period-sampling-methods", 
            "text": "Summarize by day of the week:   mondays  tuesdays  wednesdays  thursdays  fridays  saturdays  sundays   Summarize by beginnings and endings of weeks, months, quarters, or years:   bow  eow  bom  eom  boq  eoq  boy  eoy  bow  eow  bom  eom  boq  eoq  boy  eoy", 
            "title": "Time Period Sampling Methods"
        }, 
        {
            "location": "/aggregation/#collapsing-summarizing", 
            "text": "collapse  apply", 
            "title": "Collapsing &amp; Summarizing"
        }
    ]
}